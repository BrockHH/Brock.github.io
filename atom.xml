<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>星仔</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-07-30T01:01:35.158Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>星仔</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>3-1问题D</title>
    <link href="http://yoursite.com/2020/07/29/3-1%E9%97%AE%E9%A2%98D/"/>
    <id>http://yoursite.com/2020/07/29/3-1%E9%97%AE%E9%A2%98D/</id>
    <published>2020-07-29T15:25:01.000Z</published>
    <updated>2020-07-30T01:01:35.158Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题-D-比较奇偶数个数"><a href="#问题-D-比较奇偶数个数" class="headerlink" title="问题 D: 比较奇偶数个数"></a>问题 D: 比较奇偶数个数</h3><p><strong>Codeup链接：</strong><a href="http://codeup.cn/problem.php?cid=100000575&pid=3" target="_blank" rel="noopener">http://codeup.cn/problem.php?cid=100000575&amp;pid=3</a></p><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>第一行输入一个数，为n，第二行输入n个数，这n个数中，如果偶数比奇数多，输出NO，否则输出YES。</p><h4 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h4><p>输入有多组数据。<br>每组输入n，然后输入n个整数（1&lt;=n&lt;=1000）。</p><h4 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h4><p>如果偶数比奇数多，输出NO，否则输出YES。</p><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">67 </span><br><span class="line">7</span><br><span class="line">0 69 24 78 58 62 64</span><br></pre></td></tr></table></figure><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br><span class="line">NO</span><br></pre></td></tr></table></figure><p><strong>完整代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF)&#123;</span><br><span class="line"><span class="keyword">int</span> a[n];</span><br><span class="line"><span class="keyword">int</span> num_j=<span class="number">0</span>,num_o=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//输入n个数 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line"><span class="comment">//记录奇偶个数</span></span><br><span class="line"><span class="keyword">if</span>(a[i]%<span class="number">2</span>==<span class="number">0</span>)</span><br><span class="line">num_o++;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">num_j++; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出YES,NO </span></span><br><span class="line"><span class="keyword">if</span>(num_j&lt;num_o)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"NO\n"</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"YES\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;问题-D-比较奇偶数个数&quot;&gt;&lt;a href=&quot;#问题-D-比较奇偶数个数&quot; class=&quot;headerlink&quot; title=&quot;问题 D: 比较奇偶数个数&quot;&gt;&lt;/a&gt;问题 D: 比较奇偶数个数&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Codeup链接：&lt;/strong&gt;&lt;a
      
    
    </summary>
    
    
      <category term="Codeup" scheme="http://yoursite.com/categories/Codeup/"/>
    
    
      <category term="算法笔记-入门模拟" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0-%E5%85%A5%E9%97%A8%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="算法笔记学习日记" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>3-1问题C</title>
    <link href="http://yoursite.com/2020/07/29/3-1%E9%97%AE%E9%A2%98C/"/>
    <id>http://yoursite.com/2020/07/29/3-1%E9%97%AE%E9%A2%98C/</id>
    <published>2020-07-29T13:39:11.049Z</published>
    <updated>2020-07-30T01:04:32.785Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题-C-特殊乘法"><a href="#问题-C-特殊乘法" class="headerlink" title="问题 C: 特殊乘法"></a>问题 C: 特殊乘法</h3><p><strong>Codeup题目链接:</strong> <a href="http://codeup.cn/problem.php?cid=100000575&pid=2" target="_blank" rel="noopener">http://codeup.cn/problem.php?cid=100000575&amp;pid=2</a></p><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>写个算法，对2个小于1000000000的输入，求结果。特殊乘法举例：123 * 45 = 1<em>4 +1</em>5 +2<em>4 +2</em>5 +3<em>4+3</em>5</p><h4 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h4><p> 两个小于1000000000的数</p><h4 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h4><p> 输入可能有多组数据，对于每一组数据，输出Input中的两个数按照题目要求的方法进行运算后得到的结果。</p><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">24 65</span><br><span class="line">42 66666</span><br><span class="line">3 67</span><br></pre></td></tr></table></figure><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">66</span><br><span class="line">180</span><br><span class="line">39</span><br></pre></td></tr></table></figure><p><strong>思路解析：</strong></p><p><em>分析：</em>由于特殊乘法是用每一位进行相乘，所以选择字符数组存放每一位，免去拆数的麻烦;</p><p><strong>注意：由于字符存放的数字是ASCII码，所以进行计算时要减去0的ASCII码，才可以转换成正常数值进行计算</strong></p><p><strong>完整代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">20</span>],b[<span class="number">20</span>];<span class="comment">//存放输入a,b </span></span><br><span class="line"><span class="keyword">int</span> sum;</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s %s"</span>,a,b)!=EOF)&#123;</span><br><span class="line">sum=<span class="number">0</span>;</span><br><span class="line"><span class="comment">//遍历数组，转换存放到sum </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="built_in">strlen</span>(a);i++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="built_in">strlen</span>(b);j++)&#123;</span><br><span class="line">sum+=(a[i]-<span class="string">'0'</span>)*(b[j]-<span class="string">'0'</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出 </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;问题-C-特殊乘法&quot;&gt;&lt;a href=&quot;#问题-C-特殊乘法&quot; class=&quot;headerlink&quot; title=&quot;问题 C: 特殊乘法&quot;&gt;&lt;/a&gt;问题 C: 特殊乘法&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Codeup题目链接:&lt;/strong&gt; &lt;a href=&quot;ht
      
    
    </summary>
    
    
      <category term="Codeup" scheme="http://yoursite.com/categories/Codeup/"/>
    
    
      <category term="算法笔记-入门模拟" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0-%E5%85%A5%E9%97%A8%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="算法笔记学习日记" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>3-1问题B</title>
    <link href="http://yoursite.com/2020/07/29/3-1%E9%97%AE%E9%A2%98B/"/>
    <id>http://yoursite.com/2020/07/29/3-1%E9%97%AE%E9%A2%98B/</id>
    <published>2020-07-29T13:01:17.000Z</published>
    <updated>2020-07-30T01:04:20.516Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题-B-A-B"><a href="#问题-B-A-B" class="headerlink" title="问题 B: A+B"></a>问题 B: A+B</h1><p><strong>Codeup题目链接:</strong> <a href="http://codeup.cn/problem.php?cid=100000575&pid=1" target="_blank" rel="noopener">http://codeup.cn/problem.php?cid=100000575&amp;pid=1</a></p><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>给定两个整数A和B，其表示形式是：从个位开始，每三位数用逗号”,”隔开。<br>现在请计算A+B的结果，并以正常形式输出。</p><h4 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h4><p>输入包含多组数据数据，每组数据占一行，由两个整数A和B组成（-10^9 &lt; A,B &lt; 10^9）。</p><h4 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h4><p>请计算A+B的结果，并以正常形式输出，每组数据占一行。</p><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-234,567,890 123,456,789</span><br><span class="line">1,234 2,345,678</span><br></pre></td></tr></table></figure><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-111111101</span><br><span class="line">2346912</span><br></pre></td></tr></table></figure><p><strong>思路解析：</strong></p><p><em>分析：</em>由于每三位数用逗号隔开，所以选择字符数组存放，再通过字符数组的遍历转存到整型变量再计算输出。</p><p><strong>完整代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">20</span>],b[<span class="number">20</span>];<span class="comment">//字符数组存放 </span></span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%s %s"</span>,a,b)!=EOF)&#123;</span><br><span class="line"><span class="comment">//遍历数组 </span></span><br><span class="line"><span class="keyword">int</span> n=<span class="number">1</span>,ta=<span class="number">0</span>,tb=<span class="number">0</span>; <span class="comment">//ta,tb存放真实a,b数值 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="built_in">strlen</span>(a);i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]&gt;=<span class="string">'0'</span>&amp;&amp;a[i]&lt;=<span class="string">'9'</span>)&#123;</span><br><span class="line">ta+=(a[i]-<span class="string">'0'</span>)*n;</span><br><span class="line">n*=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(a[<span class="number">0</span>]==<span class="string">'-'</span>)ta=-ta; <span class="comment">//负数取反 </span></span><br><span class="line"><span class="comment">//b同理 </span></span><br><span class="line"><span class="keyword">int</span> k=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="built_in">strlen</span>(b);i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line"><span class="keyword">if</span>(b[i]&gt;=<span class="string">'0'</span>&amp;&amp;b[i]&lt;=<span class="string">'9'</span>)&#123;</span><br><span class="line">tb+=(b[i]-<span class="string">'0'</span>)*k;</span><br><span class="line">k*=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(b[<span class="number">0</span>]==<span class="string">'-'</span>)tb=-tb;</span><br><span class="line"><span class="comment">//输出 a+b </span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ta+tb);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;问题-B-A-B&quot;&gt;&lt;a href=&quot;#问题-B-A-B&quot; class=&quot;headerlink&quot; title=&quot;问题 B: A+B&quot;&gt;&lt;/a&gt;问题 B: A+B&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;Codeup题目链接:&lt;/strong&gt; &lt;a href=&quot;http:/
      
    
    </summary>
    
    
      <category term="Codeup" scheme="http://yoursite.com/categories/Codeup/"/>
    
    
      <category term="算法笔记-入门模拟" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0-%E5%85%A5%E9%97%A8%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="算法笔记学习日记" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>3-1问题A</title>
    <link href="http://yoursite.com/2020/07/29/3-1%E9%97%AE%E9%A2%98A/"/>
    <id>http://yoursite.com/2020/07/29/3-1%E9%97%AE%E9%A2%98A/</id>
    <published>2020-07-29T12:10:33.000Z</published>
    <updated>2020-07-30T01:04:06.976Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题-A-剩下的树"><a href="#问题-A-剩下的树" class="headerlink" title="问题 A: 剩下的树"></a>问题 A: 剩下的树</h3><p><strong>Codeup题目链接:</strong> <a href="http://codeup.cn/problem.php?cid=100000575&pid=0" target="_blank" rel="noopener">http://codeup.cn/problem.php?cid=100000575&amp;pid=0</a></p><h4 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h4><p>有一个长度为整数L(1&lt;=L&lt;=10000)的马路，可以想象成数轴上长度为L的一个线段，起点是坐标原点，在每个整数坐标点有一棵树，即在0,1,2，…，L共L+1个位置上有L+1棵树。<br>  现在要移走一些树，移走的树的区间用一对数字表示，如 100 200表示移走从100到200之间（包括端点）所有的树。<br>  可能有M(1&lt;=M&lt;=100)个区间，区间之间可能有重叠。现在要求移走所有区间的树之后剩下的树的个数。</p><h4 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h4><p>两个整数L(1&lt;=L&lt;=10000)和M(1&lt;=M&lt;=100)。<br>  接下来有M组整数，每组有一对数字。</p><h4 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h4><p> 可能有多组输入数据，对于每组输入数据，输出一个数，表示移走所有区间的树之后剩下的树的个数。</p><h4 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">4 2</span><br><span class="line">1 2</span><br><span class="line">0 2</span><br><span class="line">11 2</span><br><span class="line">1 5</span><br><span class="line">4 7</span><br><span class="line">0 0</span><br></pre></td></tr></table></figure><h4 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">5</span><br></pre></td></tr></table></figure><p><strong>思路解析：</strong></p><ol><li>用Line[L]数组表示：长度为L的马路总共有L+1颗树；</li><li>定义exist和without来表示有树为1和移除为0；</li><li>读取马路长L和移除区间个数M；</li><li>读取移除区间，从首到末进行移除，移除赋值为without，循环M次；</li><li>定义count计数剩余的树；</li><li>遍历数组line[L]，为exist表示剩余的树；</li><li>输出count;</li></ol><p><strong>完整代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> exist 1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> without 0 </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> l,m;</span><br><span class="line"><span class="keyword">int</span> line[<span class="number">10001</span>];<span class="comment">//表示L+1颗树 </span></span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;l,&amp;m),l||m)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l+<span class="number">1</span>;i++)&#123;</span><br><span class="line">line[i]=exist;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> min,max;</span><br><span class="line"><span class="keyword">while</span>(m--)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;min,&amp;max);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=min;i&lt;max+<span class="number">1</span>;i++)&#123;</span><br><span class="line">line[i]=without;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> count=<span class="number">0</span>;<span class="comment">//计数剩余的数 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;l+<span class="number">1</span>;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(line[i]==exist)&#123;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span>,count);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;问题-A-剩下的树&quot;&gt;&lt;a href=&quot;#问题-A-剩下的树&quot; class=&quot;headerlink&quot; title=&quot;问题 A: 剩下的树&quot;&gt;&lt;/a&gt;问题 A: 剩下的树&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Codeup题目链接:&lt;/strong&gt; &lt;a href=&quot;ht
      
    
    </summary>
    
    
      <category term="Codeup" scheme="http://yoursite.com/categories/Codeup/"/>
    
    
      <category term="算法笔记-入门模拟" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0-%E5%85%A5%E9%97%A8%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="算法笔记学习日记" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>B1032</title>
    <link href="http://yoursite.com/2020/07/28/B1032/"/>
    <id>http://yoursite.com/2020/07/28/B1032/</id>
    <published>2020-07-28T10:05:33.000Z</published>
    <updated>2020-07-30T01:04:54.167Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1032-挖掘机技术哪家强-20分"><a href="#1032-挖掘机技术哪家强-20分" class="headerlink" title="1032 挖掘机技术哪家强 (20分)"></a><strong>1032</strong> <strong>挖掘机技术哪家强</strong> (20分)</h3><p><strong>PAT题目链接:</strong> <a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805289432236032" target="_blank" rel="noopener">https://pintia.cn/problem-sets/994805260223102976/problems/994805289432236032</a></p><p>为了用事实说明挖掘机技术到底哪家强，PAT 组织了一场挖掘机技能大赛。现请你根据比赛结果统计出技术最强的那个学校。</p><h4 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h4><p>输入在第 1 行给出不超过 105 的正整数 <em>N</em>，即参赛人数。随后 <em>N</em> 行，每行给出一位参赛者的信息和成绩，包括其所代表的学校的编号（从 1 开始连续编号）、及其比赛成绩（百分制），中间以空格分隔。</p><h4 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h4><p>在一行中给出总得分最高的学校的编号、及其总分，中间以空格分隔。题目保证答案唯一，没有并列。</p><h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">3 65</span><br><span class="line">2 80</span><br><span class="line">1 100</span><br><span class="line">2 70</span><br><span class="line">3 40</span><br><span class="line">3 0</span><br></pre></td></tr></table></figure><h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 150</span><br></pre></td></tr></table></figure><p><strong>完整代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn =<span class="number">100001</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"> <span class="keyword">int</span> n;<span class="comment">//人数</span></span><br><span class="line"> <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"> <span class="keyword">int</span> a[maxn]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line"> <span class="keyword">int</span> num,score;<span class="comment">//学校序号，分数</span></span><br><span class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line"> <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;num,&amp;score);</span><br><span class="line"> a[num]+=score;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> count=<span class="number">1</span>,max=<span class="number">0</span>;<span class="comment">//最高分序号，最高分</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i]&gt;max)&#123;</span><br><span class="line">max=a[i];</span><br><span class="line">count=i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d %d"</span>,count,max);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1032-挖掘机技术哪家强-20分&quot;&gt;&lt;a href=&quot;#1032-挖掘机技术哪家强-20分&quot; class=&quot;headerlink&quot; title=&quot;1032 挖掘机技术哪家强 (20分)&quot;&gt;&lt;/a&gt;&lt;strong&gt;1032&lt;/strong&gt; &lt;strong&gt;挖掘机
      
    
    </summary>
    
    
      <category term="PAT" scheme="http://yoursite.com/categories/PAT/"/>
    
    
      <category term="算法笔记-入门模拟" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0-%E5%85%A5%E9%97%A8%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="算法笔记学习日记" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>B1001</title>
    <link href="http://yoursite.com/2020/07/28/B1001/"/>
    <id>http://yoursite.com/2020/07/28/B1001/</id>
    <published>2020-07-28T10:02:58.000Z</published>
    <updated>2020-07-30T01:04:43.495Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1001-害死人不偿命的-3n-1-猜想-15分"><a href="#1001-害死人不偿命的-3n-1-猜想-15分" class="headerlink" title="1001 害死人不偿命的(3n+1)猜想 (15分)"></a><strong>1001</strong> <strong>害死人不偿命的(3n+1)猜想</strong> <strong>(15</strong>分)</h3><p><strong>PAT题目链接:</strong> <a href="https://pintia.cn/problem-sets/994805260223102976/problems/994805325918486528" target="_blank" rel="noopener">https://pintia.cn/problem-sets/994805260223102976/problems/994805325918486528</a></p><h4 id="卡拉兹-Callatz-猜想："><a href="#卡拉兹-Callatz-猜想：" class="headerlink" title="卡拉兹(Callatz)猜想："></a>卡拉兹(Callatz)猜想：</h4><p>对任何一个正整数 <em>n</em>，如果它是偶数，那么把它砍掉一半；如果它是奇数，那么把 (3<em>n</em>+1) 砍掉一半。这样一直反复砍下去，最后一定在某一步得到 <em>n</em>=1。卡拉兹在 1950 年的世界数学家大会上公布了这个猜想，传说当时耶鲁大学师生齐动员，拼命想证明这个貌似很傻很天真的命题，结果闹得学生们无心学业，一心只证 (3<em>n</em>+1)，以至于有人说这是一个阴谋，卡拉兹是在蓄意延缓美国数学界教学与科研的进展……</p><p>我们今天的题目不是证明卡拉兹猜想，而是对给定的任一不超过 1000 的正整数 <em>n</em>，简单地数一下，需要多少步（砍几下）才能得到 <em>n</em>=1？</p><h4 id="输入格式："><a href="#输入格式：" class="headerlink" title="输入格式："></a>输入格式：</h4><p>每个测试输入包含 1 个测试用例，即给出正整数 <em>n</em> 的值。</p><h4 id="输出格式："><a href="#输出格式：" class="headerlink" title="输出格式："></a>输出格式：</h4><p>输出从 <em>n</em> 计算到 1 需要的步数。</p><h4 id="输入样例："><a href="#输入样例：" class="headerlink" title="输入样例："></a>输入样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h4 id="输出样例："><a href="#输出样例：" class="headerlink" title="输出样例："></a>输出样例：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><p><strong>完整代码：</strong></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt; </span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n,count=<span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">while</span>(n!=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(n%<span class="number">2</span>)&#123;</span><br><span class="line">n=(<span class="number">3</span>*n+<span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">n=n/<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,count);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1001-害死人不偿命的-3n-1-猜想-15分&quot;&gt;&lt;a href=&quot;#1001-害死人不偿命的-3n-1-猜想-15分&quot; class=&quot;headerlink&quot; title=&quot;1001 害死人不偿命的(3n+1)猜想 (15分)&quot;&gt;&lt;/a&gt;&lt;strong&gt;1001
      
    
    </summary>
    
    
      <category term="PAT" scheme="http://yoursite.com/categories/PAT/"/>
    
    
      <category term="算法笔记-入门模拟" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0-%E5%85%A5%E9%97%A8%E6%A8%A1%E6%8B%9F/"/>
    
      <category term="算法笔记学习日记" scheme="http://yoursite.com/tags/%E7%AE%97%E6%B3%95%E7%AC%94%E8%AE%B0%E5%AD%A6%E4%B9%A0%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
</feed>
